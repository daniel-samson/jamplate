name: 🔨 Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    name: 🧪 Test Build
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: 📋 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🔍 Verify build configuration
      run: |
        echo "Java version:"
        java -version
        echo "Maven version:"
        mvn -version
        
    - name: 🔨 Compile application
      run: mvn clean compile -DskipTests
      
    - name: 🧪 Run tests
      run: mvn test
      continue-on-error: true  # Allow tests to fail for now
      
    - name: 📦 Package JAR
      run: mvn package -DskipTests
      
    - name: 📦 Test assembly
      run: mvn assembly:single -DskipTests
      
    - name: ✅ Build verification
      run: |
        echo "Build completed successfully!"
        echo "Generated files:"
        ls -la target/jamplate-*.jar target/jamplate-*-distribution.* || true
        
        # Check if icons are included
        echo "Icon files included:"
        jar tf target/jamplate-1.0-SNAPSHOT.jar | grep icons || true

  test-native-build:
    name: 🧪 Test Native Package (macOS)
    runs-on: macos-latest
    if: github.event_name == 'pull_request'  # Only run on PRs to save resources
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: 📋 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🔨 Build project
      run: |
        mvn clean compile -DskipTests
        mvn package -DskipTests
        
    - name: 🧪 Test jpackage creation (app-image only)
      run: |
        # Test creating just an app image (faster than full DMG)
        jpackage \
          --input target/dependencies \
          --main-jar ../jamplate-1.0-SNAPSHOT.jar \
          --main-class media.samson.jamplate.HelloApplication \
          --name Jamplate-Test \
          --app-version 1.0.0 \
          --vendor "Samson Media" \
          --dest target/test-native \
          --type app-image \
          --icon src/main/resources/icons/app-icon.icns \
          --java-options "--add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED" \
          --java-options "--add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED" \
          --java-options "--add-modules java.desktop"
          
    - name: ✅ Verify native package
      run: |
        echo "Native package test completed!"
        ls -la target/test-native/
        echo "App bundle contents:"
        ls -la target/test-native/Jamplate-Test.app/Contents/ || true 