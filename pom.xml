<?xml version="1.0" encoding="UTF-8"?>
<!-- 
WebView functionality has been skipped for now. 
We'll add it back when project opening functionality is working.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>media.samson</groupId>
    <artifactId>jamplate</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>jamplate</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.10.2</junit.version>
        <javafx.version>21</javafx.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.2</version>
        </dependency>

        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.11.2</version>
        </dependency>
        <dependency>
            <groupId>org.reactfx</groupId>
            <artifactId>reactfx</artifactId>
            <version>2.0-M5</version>
        </dependency>
        
        <!-- CSV handling -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.10.0</version>
        </dependency>
        
        <!-- Faker library for generating fake data -->
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>2.4.3</version>
        </dependency>
        
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.5.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <argLine>
                        --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.prism=ALL-UNNAMED
                        --add-exports javafx.base/com.sun.javafx.logging=ALL-UNNAMED
                        --add-exports javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED
                        --add-exports javafx.web/com.sun.webkit=ALL-UNNAMED
                        --add-exports org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED
                        --add-exports org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED
                        --add-exports javafx.controls/javafx.scene.control=ALL-UNNAMED
                        --add-exports javafx.base/javafx.collections=ALL-UNNAMED
                        --add-exports javafx.base/javafx.beans=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED
                        --add-reads media.samson.jamplate=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                        --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
                        --add-opens javafx.base/javafx.collections=ALL-UNNAMED
                        --add-opens javafx.base/javafx.beans=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.prism=ALL-UNNAMED
                        --add-opens javafx.base/com.sun.javafx.logging=ALL-UNNAMED
                        --add-opens javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED
                        --add-opens javafx.web/com.sun.webkit=ALL-UNNAMED
                        --add-opens org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED
                        --add-opens org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                        --add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <!-- No global configuration - define separate configs for compile and testCompile -->
                <executions>
                    <!-- Override default-compile -->
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <release>21</release>
                            <compilerArgs>
                                <arg>--add-reads</arg>
                                <arg>media.samson.jamplate=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                    <!-- Override default-testCompile with different args -->
                    <execution>
                        <id>default-testCompile</id>
                        <configuration>
                            <release>21</release>
                            <compilerArgs>
                                <arg>--add-reads</arg>
                                <arg>media.samson.jamplate=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Add dependency plugin to copy modules to module path -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <!-- Use simple main class for JavaFX plugin -->
                    <mainClass>media.samson.jamplate.HelloApplication</mainClass>
                    <options>
                        <!-- Add all necessary exports -->
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.prism=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.logging=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.web/com.sun.webkit=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED</option>
                        <option>--add-reads</option>
                        <option>media.samson.jamplate=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/javafx.scene.control=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/javafx.collections=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/javafx.beans=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.prism=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.logging=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.web/com.sun.webkit=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>
                    </options>
                </configuration>
            </plugin>
            <!-- Add exec-maven-plugin as an alternative run method -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <mainClass>media.samson.jamplate.HelloApplication</mainClass>
                    <arguments>
                        <!-- Add VM arguments if needed -->
                    </arguments>
                    <classpathScope>runtime</classpathScope>
                </configuration>
            </plugin>
            
            <!-- JPackage Plugin for creating native executables -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.6.5</version>
                <configuration>
                    <name>Jamplate</name>
                    <appVersion>1.0.0</appVersion>
                    <vendor>Samson Media</vendor>
                    <destination>target/dist</destination>
                    <module>media.samson.jamplate/media.samson.jamplate.HelloApplication</module>
                    <modulePaths>
                        <modulePath>target/classes</modulePath>
                        <modulePath>target/dependencies</modulePath>
                    </modulePaths>
                    <icon>src/main/resources/icons/app-icon.png</icon>
                    <javaOptions>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.prism=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.logging=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.web/com.sun.webkit=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED</option>
                        <option>--add-reads</option>
                        <option>media.samson.jamplate=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/javafx.scene.control=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/javafx.collections=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/javafx.beans=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.prism=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.logging=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.web/com.sun.javafx.sg.prism.web=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.web/com.sun.webkit=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>org.fxmisc.richtext/org.fxmisc.richtext.model=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>
                    </javaOptions>
                    <linuxPackageName>jamplate</linuxPackageName>
                    <linuxMenuGroup>Development</linuxMenuGroup>
                    <macPackageIdentifier>media.samson.jamplate</macPackageIdentifier>
                    <macPackageName>Jamplate</macPackageName>
                    <winDirChooser>true</winDirChooser>
                    <winMenuGroup>Development Tools</winMenuGroup>
                    <winPerUserInstall>false</winPerUserInstall>
                    <winShortcut>true</winShortcut>
                    <winMenu>true</winMenu>
                </configuration>
                <!-- Removed automatic execution to prevent build failure -->
            </plugin>

            <!-- Maven Assembly Plugin for creating distribution archives -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/distribution.xml</descriptor>
                    </descriptors>
                    <finalName>jamplate-${project.version}</finalName>
                    <appendAssemblyId>true</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven JAR Plugin for creating executable JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                            <mainClass>media.samson.jamplate.HelloApplication</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Title>Jamplate</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Vendor>Samson Media</Implementation-Vendor>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
